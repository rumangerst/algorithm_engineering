Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Begin optimization report for: matmat(double, bool, const double *, int, int, int, const double *, int, int, double, double *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(23,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(29,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(36,2)
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(38,4) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(38,4) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.031
         remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 9 
         remark #15477: vector loop cost: 1.000 
         remark #15478: estimated potential speedup: 8.410 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(36,2)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(38,4) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(38,4) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.867
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(43,2)
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15388: vectorization support: reference b_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.025
         remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 15 
         remark #15477: vector loop cost: 1.250 
         remark #15478: estimated potential speedup: 11.220 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(43,2)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15388: vectorization support: reference b_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15388: vectorization support: reference b_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(46,4) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.737
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(62,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(71,5)
      remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(73,7) ]
      remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(73,7) ]
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.031
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 9 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 8.410 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(71,5)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(73,7) ]
      remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(73,7) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.867
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(77,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(82,7)
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15388: vectorization support: reference b has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.025
         remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 20 
         remark #15477: vector loop cost: 1.250 
         remark #15478: estimated potential speedup: 14.960 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /home/ruman/u4/matmat/matmat.cpp(82,7)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15388: vectorization support: reference b has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15388: vectorization support: reference c_row has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15388: vectorization support: reference b has aligned access   [ /home/ruman/u4/matmat/matmat.cpp(86,2) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.667
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END
===========================================================================
